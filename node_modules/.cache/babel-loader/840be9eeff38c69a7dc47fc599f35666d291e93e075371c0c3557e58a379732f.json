{"ast":null,"code":"var _jsxFileName = \"/Users/vipinprasad/Desktop/spotify/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, InputGroup, FormControl, Button, Row, Card } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = ''; // Replace with your actual client ID\nconst CLIENT_SECRET = 'your_client_secret'; // Replace with your actual client secret\n\nfunction App() {\n  _s();\n  const [searchInput, setSearchInput] = useState('');\n  const [accessToken, setAccessToken] = useState('');\n  const [albums, setAlbums] = useState([]);\n  useEffect(() => {\n    // Function to obtain the access token\n    async function getAccessToken() {\n      try {\n        const response = await fetch('https://accounts.spotify.com/api/token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Basic ' + btoa(CLIENT_ID + ':' + CLIENT_SECRET) // Encode client credentials\n          },\n\n          body: 'grant_type=client_credentials'\n        });\n        const data = await response.json();\n        setAccessToken(data.access_token);\n      } catch (error) {\n        console.error('Error obtaining access token:', error);\n      }\n    }\n    getAccessToken();\n  }, []);\n\n  // Search function\n  async function search() {\n    console.log(\"Searching for\", searchInput);\n    const searchParameters = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + accessToken\n      }\n    };\n    try {\n      // Get request to search for the artist and obtain the artist ID\n      const response = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=artist&limit=1', searchParameters);\n      const data = await response.json();\n      const artistID = data.artists.items[0].id;\n      console.log(\"Artist ID:\", artistID);\n\n      // Fetch albums for the artist\n      const albumsResponse = await fetch('https://api.spotify.com/v1/artists/' + artistID + '/albums?include_groups=album&market=IN&limit=50', searchParameters);\n      const albumsData = await albumsResponse.json();\n      setAlbums(albumsData.items);\n    } catch (error) {\n      console.error('Error searching for artist:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        size: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          placeholder: \"Search for an Artist\",\n          type: \"input\",\n          onKeyPress: event => {\n            if (event.key === 'Enter') {\n              search();\n            }\n          },\n          onChange: event => setSearchInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: search,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-2 row-cols-4\",\n        children: albums.map((album, index) => /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            src: album.images[0].url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: album.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bY9j/ZRVBL/e2BGcjHot6CSi2Io=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","InputGroup","FormControl","Button","Row","Card","useState","useEffect","jsxDEV","_jsxDEV","CLIENT_ID","CLIENT_SECRET","App","_s","searchInput","setSearchInput","accessToken","setAccessToken","albums","setAlbums","getAccessToken","response","fetch","method","headers","btoa","body","data","json","access_token","error","console","search","log","searchParameters","artistID","artists","items","id","albumsResponse","albumsData","className","children","size","placeholder","type","onKeyPress","event","key","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","album","index","Img","src","images","url","Body","Title","name","_c","$RefreshReg$"],"sources":["/Users/vipinprasad/Desktop/spotify/client/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, InputGroup, FormControl, Button, Row, Card } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\n\nconst CLIENT_ID = ''; // Replace with your actual client ID\nconst CLIENT_SECRET = 'your_client_secret'; // Replace with your actual client secret\n\nfunction App() {\n  const [searchInput, setSearchInput] = useState('');\n  const [accessToken, setAccessToken] = useState('');\n  const [albums, setAlbums] = useState([]);\n\n  useEffect(() => {\n    // Function to obtain the access token\n    async function getAccessToken() {\n      try {\n        const response = await fetch('https://accounts.spotify.com/api/token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Basic ' + btoa(CLIENT_ID + ':' + CLIENT_SECRET), // Encode client credentials\n          },\n          body: 'grant_type=client_credentials',\n        });\n        const data = await response.json();\n        setAccessToken(data.access_token);\n      } catch (error) {\n        console.error('Error obtaining access token:', error);\n      }\n    }\n\n    getAccessToken();\n  }, []);\n\n  // Search function\n  async function search() {\n    console.log(\"Searching for\", searchInput);\n\n    const searchParameters = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + accessToken,\n      },\n    };\n\n    try {\n      // Get request to search for the artist and obtain the artist ID\n      const response = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=artist&limit=1', searchParameters);\n      const data = await response.json();\n      const artistID = data.artists.items[0].id;\n      console.log(\"Artist ID:\", artistID);\n\n      // Fetch albums for the artist\n      const albumsResponse = await fetch('https://api.spotify.com/v1/artists/' + artistID + '/albums?include_groups=album&market=IN&limit=50', searchParameters);\n      const albumsData = await albumsResponse.json();\n      setAlbums(albumsData.items);\n    } catch (error) {\n      console.error('Error searching for artist:', error);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <InputGroup className='mb-3' size='lg'>\n          <FormControl\n            placeholder='Search for an Artist'\n            type='input'\n            onKeyPress={(event) => {\n              if (event.key === 'Enter') {\n                search();\n              }\n            }}\n            onChange={(event) => setSearchInput(event.target.value)}\n          />\n          <Button onClick={search}>Search</Button>\n        </InputGroup>\n      </Container>\n      <Container>\n        <Row className='mb-2 row-cols-4'>\n          {albums.map((album, index) => (\n            <Card key={index}>\n              <Card.Img src={album.images[0].url} />\n              <Card.Body>\n                <Card.Title>{album.name}</Card.Title>\n              </Card.Body>\n            </Card>\n          ))}\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}