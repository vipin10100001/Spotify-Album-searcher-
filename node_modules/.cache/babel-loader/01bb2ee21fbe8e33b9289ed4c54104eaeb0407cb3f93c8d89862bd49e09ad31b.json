{"ast":null,"code":"var _jsxFileName = \"/Users/vipinprasad/Desktop/spotify/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, InputGroup, FormControl, Button, Row, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = 'YOUR_CLIENT_ID';\nconst CLIENT_SECRET = 'YOUR_CLIENT_SECRET';\nconst App = () => {\n  _s();\n  const [searchInput, setSearchInput] = useState('');\n  const [artists, setArtists] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchAccessToken = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('https://accounts.spotify.com/api/token', {\n          method: 'POST',\n          headers: {\n            'Authorization': 'Basic ' + btoa(`${CLIENT_ID}:${CLIENT_SECRET}`),\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: 'grant_type=client_credentials'\n        });\n        const data = await response.json();\n        setAccessToken(data.access_token);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchAccessToken();\n  }, []);\n  const searchArtists = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/search?type=artist&q=${searchInput}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const data = await response.json();\n      if (response.status !== 200) {\n        throw new Error(`Error searching for artist: ${data.error.message}`);\n      }\n      setArtists(data.artists.items);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSearch = async () => {\n    await searchArtists();\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"Search for an artist\",\n        type: \"input\",\n        onKeyPress: event => {\n          if (event.key === 'Enter') {\n            handleSearch();\n          }\n        },\n        onChange: event => setSearchInput(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-2 row-cols-4\",\n      children: artists.map(artist => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"artist-card\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          src: artist.images[0].url,\n          alt: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, artist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UI9is8PlxxA4E3J1yLZo5BYBtYM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","InputGroup","FormControl","Button","Row","Card","jsxDEV","_jsxDEV","CLIENT_ID","CLIENT_SECRET","App","_s","searchInput","setSearchInput","artists","setArtists","isLoading","setIsLoading","error","setError","fetchAccessToken","response","fetch","method","headers","btoa","body","data","json","setAccessToken","access_token","message","searchArtists","Authorization","accessToken","status","Error","items","handleSearch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","size","placeholder","type","onKeyPress","event","key","onChange","target","value","onClick","map","artist","Img","src","images","url","alt","name","Body","Title","id","_c","$RefreshReg$"],"sources":["/Users/vipinprasad/Desktop/spotify/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, InputGroup, FormControl, Button, Row, Card } from 'react-bootstrap';\n\nconst CLIENT_ID = 'YOUR_CLIENT_ID';\nconst CLIENT_SECRET = 'YOUR_CLIENT_SECRET';\n\nconst App = () => {\n  const [searchInput, setSearchInput] = useState('');\n  const [artists, setArtists] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchAccessToken = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('https://accounts.spotify.com/api/token', {\n          method: 'POST',\n          headers: {\n            'Authorization': 'Basic ' + btoa(`${CLIENT_ID}:${CLIENT_SECRET}`),\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: 'grant_type=client_credentials',\n        });\n\n        const data = await response.json();\n\n        setAccessToken(data.access_token);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchAccessToken();\n  }, []);\n\n  const searchArtists = async () => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/search?type=artist&q=${searchInput}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n\n      const data = await response.json();\n\n      if (response.status !== 200) {\n        throw new Error(`Error searching for artist: ${data.error.message}`);\n      }\n\n      setArtists(data.artists.items);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSearch = async () => {\n    await searchArtists();\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <Container>\n      <InputGroup className='mb-3' size='lg'>\n        <FormControl\n          placeholder='Search for an artist'\n          type='input'\n          onKeyPress={(event) => {\n            if (event.key === 'Enter') {\n              handleSearch();\n            }\n          }}\n          onChange={(event) => setSearchInput(event.target.value)}\n        />\n        <Button onClick={handleSearch}>\n          Search\n        </Button>\n      </InputGroup>\n\n      <Row className='mb-2 row-cols-4'>\n        {artists.map(artist => (\n          <Card className=\"artist-card\" key={artist.id}>\n            <Card.Img src={artist.images[0].url} alt={artist.name} />\n            <Card.Body>\n              <Card.Title>{artist.name}</Card.Title>\n            </Card.Body>\n          </Card>\n        ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}